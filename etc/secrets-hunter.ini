; Exclusion rules
; this section can be splitted in two categories:
; - pre-scan exclusions: prevent files from being indexed and scanned.
; - post-scan exclusions: whitelist/ignore the scanner detection.
[exclusions]

; Exclude file extensions (pre-scan)
; The files with the listed extensions will be skipped
; by the indexer and they will not be scanned.
extensions =
    .exe
    .jpg
    .jpeg
    .png
    .svg
    .gif
    .bmp
    .tiff
    .tif
    .psd
    .xcf
    .zip
    .tar.gz
    .ttf
    .lock

; Exclude directories (pre-scan)
; The sub-directories and sub-files of the listed directories
; will be skipped by the indexer and they will not be scanned.
directories =
    node_modules
    __pycache__
    tests
    .git

; Exclude files (pre-scan)
; The files names in the following attribute will be skipped
; by the indexer and they will not be scanned.
files =

; Exclude files bigger than `file_size` (pre-scan)
; Those files will be skipped by the indexer and they will not be scanned.
# 250000 bytes = 0,25 Mb
file_size = 250000

; Whitelist scan detections based on `patterns` (post-scan)
; The issue is ignored if a pattern is found in the matched snippet.
patterns=
    META_
    _META
    EXAMPLE_
    _EXAMPLE
    _EX
    EX_
    nosec

; Scanner detection rules
; Detect secrets in the source code using the `match` and `regex` attributes.

; Example:
;
; [rule.SH000]
; part = contents
; match = api_key
; regex = api[\-_]key
; name = API key keyword
; severity = error

[rule.SH001]
part = extension
match = .pem
name = Potential cryptographic private key
severity = error

[rule.SH002]
part = extension
match = .log
name = Log file
severity = error

[rule.SH003]
part = extension
match = .pkcs12
name = Potential cryptographic key bundle
severity = error

[rule.SH004]
part = extension
match = .p12
name = Potential cryptographic key bundle
severity = error

[rule.SH005]
part = extension
match = .pfx
name = Potential cryptographic key bundle
severity = error

[rule.SH006]
part = extension
match = .asc
name = Potential cryptographic key bundle
severity = error

[rule.SH007]
part = filename
match = otr.private_key
name = Pidgin OTR private key
severity = error

[rule.SH008]
part = extension
match = .ovpn
name = OpenVPN client configuration file
severity = error

[rule.SH009]
part = extension
match = .cscfg
name = Azure service configuration schema file
severity = error

[rule.SH010]
part = extension
match = .rdp
name = Remote Desktop connection file
severity = error

[rule.SH011]
part = extension
match = .mdf
name = Microsoft SQL database file
severity = error

[rule.SH012]
part = extension
match = .sdf
name = Microsoft SQL server compact database file
severity = error

[rule.SH013]
part = extension
match = .sqlite
name = SQLite database file
severity = error

[rule.SH014]
part = extension
match = .sqlite3
name = SQLite3 database file
severity = error

[rule.SH015]
part = extension
match = .bek
name = Microsoft BitLocker recovery key file
severity = error

[rule.SH016]
part = extension
match = .tpm
name = Microsoft BitLocker Trusted Platform Module password file
severity = error

[rule.SH017]
part = extension
match = .fve
name = Windows BitLocker full volume encrypted data file
severity = error

[rule.SH018]
part = extension
match = .jks
name = Java keystore file
severity = error

[rule.SH019]
part = extension
match = .psafe3
name = Password Safe database file
severity = error

[rule.SH020]
part = filename
match = secret_token.rb
name = Ruby On Rails secret token configuration file
severity = error

[rule.SH021]
part = filename
match = carrierwave.rb
name = Carrierwave configuration file
severity = error

[rule.SH022]
part = filename
match = database.yml
name = Potential Ruby On Rails database configuration file
severity = error

[rule.SH023]
part = filename
match = omniauth.rb
name = OmniAuth configuration file
severity = error

[rule.SH024]
part = filename
match = settings.py
name = Django configuration file
severity = error

[rule.SH025]
part = extension
match = .agilekeychain
name = 1Password password manager database file
severity = error

[rule.SH026]
part = extension
match = .keychain
name = Apple Keychain database file
severity = error

[rule.SH027]
part = extension
match = .pcap
name = Network traffic capture file
severity = error

[rule.SH028]
part = extension
match = .gnucash
name = GnuCash database file
severity = error

[rule.SH029]
part = filename
match = jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin.xml
name = Jenkins publish over SSH plugin file
severity = error

[rule.SH030]
part = filename
match = credentials.xml
name = Potential Jenkins credentials file
severity = error

[rule.SH031]
part = extension
match = .kwallet
name = KDE Wallet Manager database file
severity = error

[rule.SH032]
part = filename
match = LocalSettings.php
name = Potential MediaWiki configuration file
severity = error

[rule.SH033]
part = extension
match = .tblk
name = Tunnelblick VPN configuration file
severity = error

[rule.SH034]
part = filename
match = Favorites.plist
name = Sequel Pro MySQL database manager bookmark file
severity = error

[rule.SH035]
part = filename
match = configuration.user.xpl
name = Little Snitch firewall configuration file
severity = error

[rule.SH036]
part = extension
match = .dayone
name = Day One journal file
severity = error

[rule.SH037]
part = filename
match = journal.txt
name = Potential jrnl journal file
severity = error

[rule.SH038]
part = filename
match = knife.rb
name = Chef Knife configuration file
severity = error

[rule.SH039]
part = filename
match = proftpdpasswd
name = cPanel backup ProFTPd credentials file
severity = error

[rule.SH040]
part = filename
match = robomongo.json
name = Robomongo MongoDB manager configuration file
severity = error

[rule.SH041]
part = filename
match = filezilla.xml
name = FileZilla FTP configuration file
severity = error

[rule.SH042]
part = filename
match = recentservers.xml
name = FileZilla FTP recent servers file
severity = error

[rule.SH043]
part = filename
match = ventrilo_srv.ini
name = Ventrilo server configuration file
severity = error

[rule.SH044]
part = filename
match = terraform.tfvars
name = Terraform variable config file
severity = error

[rule.SH045]
part = filename
match = .exports
name = Shell configuration file
severity = error

[rule.SH046]
part = filename
match = .functions
name = Shell configuration file
severity = error

[rule.SH047]
part = filename
match = .extra
name = Shell configuration file
severity = error

[rule.SH048]
part = filename
regex = ^.*_rsa$
name = Private SSH key
severity = error

[rule.SH049]
part = filename
regex = ^.*_dsa$
name = Private SSH key
severity = error

[rule.SH050]
part = filename
regex = ^.*_ed25519$
name = Private SSH key
severity = error

[rule.SH051]
part = filename
regex = ^.*_ecdsa$
name = Private SSH key
severity = error

[rule.SH052]
part = path
regex = \.?ssh/config$
name = SSH configuration file
severity = error

[rule.SH053]
part = extension
regex = ^key(pair)?$
name = Potential cryptographic private key
severity = error

[rule.SH054]
part = filename
regex = ^\.?(bash_|zsh_|sh_|z)?history$
name = Shell command history file
severity = error

[rule.SH055]
part = filename
regex = ^\.?mysql_history$
name = MySQL client command history file
severity = error

[rule.SH056]
part = filename
regex = ^\.?psql_history$
name = PostgreSQL client command history file
severity = error

[rule.SH057]
part = filename
regex = ^\.?pgpass$
name = PostgreSQL password file
severity = error

[rule.SH058]
part = filename
regex = ^\.?irb_history$
name = Ruby IRB console history file
severity = error

[rule.SH059]
part = path
regex = \.?purple/accounts\.xml$
name = Pidgin chat client account configuration file
severity = error

[rule.SH060]
part = path
regex = \.?xchat2?/servlist_?\.conf$
name = Hexchat/XChat IRC client server list configuration file
severity = error

[rule.SH061]
part = path
regex = \.?irssi/config$
name = Irssi IRC client configuration file
severity = error

[rule.SH062]
part = path
regex = \.?recon-ng/keys\.db$
name = Recon-ng web reconnaissance framework API key database
severity = error

[rule.SH063]
part = filename
regex = ^\.?dbeaver-data-sources.xml$
name = DBeaver SQL database manager configuration file
severity = error

[rule.SH064]
part = filename
regex = ^\.?muttrc$
name = Mutt e-mail client configuration file
severity = error

[rule.SH065]
part = filename
regex = ^\.?s3cfg$
name = S3cmd configuration file
severity = error

[rule.SH066]
part = path
regex = \.?aws/credentials$
name = AWS CLI credentials file
severity = error

[rule.SH067]
part = filename
regex = ^sftp-config(\.json)?$
name = SFTP connection configuration file
severity = error

[rule.SH068]
part = filename
regex = ^\.?trc$
name = T command-line Twitter client configuration file
severity = error

[rule.SH069]
part = filename
regex = ^\.?(bash|zsh|csh)rc$
name = Shell configuration file
severity = error

[rule.SH070]
part = filename
regex = ^\.?(bash_|zsh_)?profile$
name = Shell profile configuration file
severity = error

[rule.SH071]
part = filename
regex = ^\.?(bash_|zsh_)?aliases$
name = Shell command alias configuration file
severity = error

[rule.SH072]
part = filename
regex = config(\.inc)?\.php$
name = PHP configuration file
severity = error

[rule.SH073]
part = extension
regex = ^key(store|ring)$
name = GNOME Keyring database file
severity = error

[rule.SH074]
part = extension
regex = ^kdbx?$
name = KeePass password manager database file
severity = error

[rule.SH075]
part = extension
regex = ^sql(dump)?$
name = SQL dump file
severity = error

[rule.SH076]
part = filename
regex = ^\.?htpasswd$
name = Apache htpasswd file
severity = error

[rule.SH077]
part = filename
regex = ^(\.|_)?netrc$
name = Configuration file for auto-login process
severity = error

[rule.SH078]
part = path
regex = \.?gem/credentials$
name = Rubygems credentials file
severity = error

[rule.SH079]
part = filename
regex = ^\.?tugboat$
name = Tugboat DigitalOcean management tool configuration
severity = error

[rule.SH080]
part = path
regex = doctl/config.yaml$
name = DigitalOcean doctl command-line client configuration file
severity = error

[rule.SH081]
part = filename
regex = ^\.?git-credentials$
name = git-credential-store helper credentials file
severity = error

[rule.SH082]
part = path
regex = config/hub$
name = GitHub Hub command-line client configuration file
severity = error

[rule.SH083]
part = filename
regex = ^\.?gitconfig$
name = Git configuration file
severity = error

[rule.SH084]
part = path
regex = \.?chef/(.*)\.pem$
name = Chef private key
severity = error

[rule.SH085]
part = path
regex = etc/shadow$
name = Potential Linux shadow file
severity = error

[rule.SH086]
part = path
regex = etc/passwd$
name = Potential Linux passwd file
severity = error
comment = Contains system user information

[rule.SH087]
part = filename
regex = ^\.?dockercfg$
name = Docker configuration file
severity = error

[rule.SH088]
part = filename
regex = ^\.?npmrc$
name = NPM configuration file
severity = error

[rule.SH089]
part = filename
regex = ^\.?env$
name = Environment configuration file
severity = error

[rule.SH090]
part = contents
regex = (A3T[A-Z0-9]|AKIA|AGPA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}
name = AWS Access Key ID Value
severity = error

[rule.SH091]
part = contents
regex = (?i)(("|`)?(aws)?_?(access)_?(key)?_?(id)?("|`)?(\s{0,50})?(:|=>|=)(\s{0,50})?("|`)?(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}("|`)?)
name = AWS Access Key ID
severity = error

[rule.SH092]
part = contents
regex = (?i)(("|`)?(aws)?_?(account)_?(id)?("|`)?(\s{0,50})?(:|=>|=)(\s{0,50})?("|`)?[0-9]{4}-?[0-9]{4}-?[0-9]{4}("|`)?)
name = AWS Account ID
severity = error

[rule.SH093]
part = contents
regex = (?i)(("|`)?(aws)?_?(secret)_?(access)?_?(key)?_?(id)?("|`)?(\s{0,50})?(:|=>|=)(\s{0,50})?("|`)?[A-Za-z0-9/+=]{40}("|`)?)
name = AWS Secret Access Key
severity = error

[rule.SH094]
part = contents
regex = (?i)(("|`)?(aws)?_?(session)?_?(token)?("|`)?(\s{0,50})?(:|=>|=)(\s{0,50})?("|`)?[A-Za-z0-9/+=]{100,400}("|`)?)
name = AWS Session Token
severity = error

[rule.SH095]
part = contents
regex = (?i)artifactory.{0,50}("|`)?[a-zA-Z0-9=]{112}("|`)?
name = Artifactory
severity = error

[rule.SH096]
part = contents
regex = (?i)codeclima.{0,50}("|`)?[0-9a-f]{64}("|`)?
name = CodeClimate
severity = error

[rule.SH097]
part = contents
regex = EAACEdEose0cBA[0-9A-Za-z]+
name = Facebook access token
severity = error

[rule.SH098]
part = contents
regex = (?i)(("|`)?type("|`)?\s{0,50}(:|=>|=)\s{0,50}("|`)?service_account("|`)?,?)
name = Google (GCM) Service account
severity = error

[rule.SH099]
part = contents
regex = (?:r|s)k_(live|test)_[0-9a-zA-Z]{24}
name = Stripe API key
severity = error

[rule.SH100]
part = contents
regex = [0-9]+-[0-9A-Za-z_]{32}\.apps\.googleusercontent\.com
name = Google OAuth Key
severity = error

[rule.SH101]
part = contents
regex = AIza[0-9A-Za-z\-_]{35}
name = Google Cloud API Key
severity = error

[rule.SH102]
part = contents
regex = ya29\.[0-9A-Za-z\-_]+
name = Google OAuth Access Token
severity = error

[rule.SH103]
part = contents
regex = sk_[live|test]_[0-9a-z]{32}
name = Picatic API key
severity = error

[rule.SH104]
part = contents
regex = sq0atp-[0-9A-Za-z\-_]{22}
name = Square Access Token
severity = error

[rule.SH105]
part = contents
regex = sq0csp-[0-9A-Za-z\-_]{43}
name = Square OAuth Secret
severity = error

[rule.SH106]
part = contents
regex = access_token\$production\$[0-9a-z]{16}\$[0-9a-f]{32}
name = PayPal/Braintree Access Token
severity = error

[rule.SH107]
part = contents
regex = amzn\.mws\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
name = Amazon MWS Auth Token
severity = error

[rule.SH108]
part = contents
regex = SK[0-9a-fA-F]{32}
name = Twilo API Key
severity = error

[rule.SH109]
part = contents
regex = SG\.[0-9A-Za-z\-_]{22}\.[0-9A-Za-z\-_]{43}
name = SendGrid API Key
severity = error

[rule.SH110]
part = contents
regex = key-[0-9a-zA-Z]{32}
name = MailGun API Key
severity = error

[rule.SH111]
part = contents
regex = [0-9a-z]{32}-us[0-9]{1,2}
name = Mailchimp Access Key
severity = error

[rule.SH112]
part = contents
regex = sshpass -p.*[|"]
name = SSH Password
severity = error

[rule.SH113]
part = contents
regex = (https://outlook\.office\.com/webhook/[0-9a-f-]{36}@)
name = Outlook team
severity = error

[rule.SH114]
part = contents
regex = (?i)sauce.{0,50}("|`)?[0-9a-f-]{36}("|`)?
name = Sauce Token
severity = error

[rule.SH115]
part = contents
regex = (?i)(xox[pboa]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})
name = Slack Token
severity = error

[rule.SH116]
part = contents
regex = https://hooks\.slack\.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}
name = Slack Webhook
severity = error

[rule.SH117]
part = contents
regex = (?i)sonar.{0,50}("|`)?[0-9a-f]{40}("|`)?
name = SonarQube Docs API Key
severity = error

[rule.SH118]
part = contents
regex = (?i)hockey.{0,50}("|`)?[0-9a-f]{32}("|`)?
name = HockeyApp
severity = error

[rule.SH119]
part = contents
regex = ([\w+]{1,24})(://)([^$<]{1})([^\s";]{1,}):([^$<]{1})([^\s";/]{1,})@[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,24}([^\s]+)
name = Username and password in URI
severity = error

[rule.SH120]
part = contents
regex = oy2[a-z0-9]{43}
name = NuGet API Key
severity = error

[rule.SH121]
part = contents
regex = hawk\.[0-9A-Za-z\-_]{20}\.[0-9A-Za-z\-_]{20}
name = StackHawk API Key
severity = error

[rule.SH122]
part = extension
match = .ppk
name = Potential PuTTYgen private key
severity = error

[rule.SH123]
part = filename
match = heroku.json
name = Heroku config file
severity = error

[rule.SH124]
part = extension
match = .sqldump
name = SQL Data dump file
severity = error

[rule.SH125]
part = filename
match = dump.sql
name = MySQL dump w/ bcrypt hashes
severity = error

[rule.SH126]
part = filename
match = id_rsa_pub
name = Public ssh key
severity = error

[rule.SH127]
part = filename
match = mongoid.yml
name = Mongoid config file
severity = error

[rule.SH128]
part = filename
match = salesforce.js
name = Salesforce credentials in a nodejs project
severity = error

[rule.SH129]
part = extension
match = .netrc
name = netrc with SMTP credentials
severity = error

[rule.SH130]
part = filename
regex = .remote-sync.json$
name = Created by remote-sync for Atom, contains FTP and/or SCP/SFTP/SSH server details and credentials
severity = error

[rule.SH131]
part = filename
regex = .esmtprc$
name = esmtp configuration
severity = error

[rule.SH132]
part = filename
regex = ^deployment-config.json?$
name = Created by sftp-deployment for Atom, contains server details and credentials
severity = error

[rule.SH133]
part = filename
regex = .ftpconfig$
name = Created by sftp-deployment for Atom, contains server details and credentials
severity = error

[rule.SH134]
part = contents
regex = -----BEGIN (EC|RSA|DSA|OPENSSH|PGP|SSH2 ENCRYPTED) PRIVATE KEY
name = Contains a private key
severity = error

[rule.SH135]
part = contents
regex = (?i)(aws_access_key_id|aws_secret_access_key)(.{0,20})?=.[0-9a-zA-Z\/+]{20,40}
name = AWS cred file info
severity = error

[rule.SH136]
part = path
regex = \.?idea/WebServers.xml$
name = Created by Jetbrains IDEs, contains webserver credentials with encoded passwords (not encrypted!)
severity = error

[rule.SH137]
part = path
regex = \.?vscode/sftp.json$
name = Created by vscode-sftp for VSCode, contains SFTP/SSH server details and credentials
severity = error

[rule.SH138]
part = path
match = web/ruby/secrets.yml
name = Ruby on rails secrets.yml file (contains passwords)
severity = error

[rule.SH139]
part = path
regex = \.?docker/config.json$
name = Docker registry authentication file
severity = error

[rule.SH140]
part = path
regex = ruby/config/master.key$
name = Rails master key (used for decrypting credentials.yml.enc for Rails 5.2+)
severity = error

[rule.SH141]
part = path
regex = \.?mozilla/firefox/logins.json$
name = Firefox saved password collection (can be decrypted using keys4.db)
severity = error

[rule.SH142]
part = filename
match = wallet.dat
name = Bitcoin Core wallet
severity = error

[rule.SH143]
part = filename
match = onion_v3_private_key
name = Private key for Bitcoin Core onion service
severity = error

[rule.SH144]
part = filename
match = bitcoin.conf
name = Bitcoin Core config
severity = error

[rule.SH145]
part = contents
regex = (?:\s|=|:|"|^)AKC[a-zA-Z0-9]{10,}
name = Artifactory API token
severity = error

[rule.SH146]
part = contents
regex = (?:\s|=|:|"|^)AP[\dABCDEF][a-zA-Z0-9]{8,}
name = Artifactory password
severity = error

[rule.SH147]
part = contents
regex = AccountKey=[a-zA-Z0-9+\/=]{88}
name = Azure Storage Account access keys
severity = error

[rule.SH148]
part = contents
regex = (ghp|gho|ghu|ghs|ghr)_[A-Za-z0-9_]{36}
name = GitHub Token
severity = error

[rule.SH149]
part = contents
regex = eyJ[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+/=]*?
name = JSON Web Token
severity = error

[rule.SH150]
part = contents
regex = //.+/:_authToken=.+
name = NPM tokens
severity = error

[rule.SH151]
part = contents
match = PuTTY-User-Key-File-2
name = Contains PuTTY private key
severity = error

[rule.SH152]
part = contents
regex = AC[a-z0-9]{32}
name = Twilio Account SID
severity = error

[rule.SH153]
part = contents
regex = SK[a-z0-9]{32}
name = Twilio Auth token
severity = error

; Agressive detection (will raise false-positives)
; [rule.SH154]
; part = contents
; regex = (?i)(?:'|"){0,1}(?:[a-z0-9\-_.]{0,25})(?:key|api|apikey|token|secret|client|pass|pwd|passwd|password|auth|cred|authentication)(?:[0-9a-z\-_\s.]{0,20})(?:'|"){0,1}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|"|\s|=){0,5}([0-9a-z\-_\.=:@!]{8,512})['|"|\n|\r|\s]
; name = Generic credentials
; severity = error
